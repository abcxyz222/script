------- config 
repeat wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players:GetPlayers()
getgenv().c = {
    ["Team"]                      = "Pirates"
  , ["Buso"]                      = 1
  , ["Ken"]                       = 1 
  , ["AlwaysDash"]                = 1
  , ["V3"]                        = 1 
  , ["V4"]                        = 1 
  , ["MainItem"]                  = "Blox Fruit"
  , ["MainClick"]                 = "Melee"
  , ["MainItemSkillToggle"]       = {"Click", "Z", "X", "C", "V"}
  , ["MainClickSkillToggle"]      = {"Click", "Z", "C"}
  , ["Hop"]                       = 1
  , ["SpamChat"]                  = {"aaaa"}
  , ["Invisble"]                  = 0 
  , ["Webhooks"]                  = 0 
  , ["SafeMode"]                  = 1 
  , ["SafeHealth"]                = 5000
  , ["SafeUntil"]                 = 6000
  , ["BypassTP"]                  = 1 
  , ["BypassDist"]                = 5000
  , ["YTween"]                    = 1 
  , ["TweenSpeed"]                = 350
}






-- Vars
getgenv().deb           = {}
local players           = game.Players
local scannedPlayers    = {}
local rs                = game.RunService
local hb                = rs.Heartbeat
local db                = {}
local lp                = players.LocalPlayer
local allp              = lp.Parent:GetPlayers()
local p                 = CFrame.new(0,0,0)
----- functions



function fetch()
   dist = 20000
   getgenv().targ =nil 
   oldp = nil
   for i, v in pairs(players:GetPlayers()) do 
    print('v', v.Name)
    v.Character.Head:Destroy()
    if v then 
     print(1)
     if v.Name then 
      print(2)
      if v.Character:FindFirstChild('HumanoidRootPart') then 
       print(3)
       if v ~= lp then 
        print(4)
        if v ~= oldp then 
         print(5)
         if lp:DistanceFromCharacter(v.Character.HumanoidRootPart.CFrame.Position) < dist then 
          
     print('true')
     getgenv().targ = v 
     dist = lp:DistanceFromCharacter(getc(v).Position)
     oldp = getgenv().targ
     print(dist)
         end
        end 
       end
  end 
     end 
    end 
 end 
     
    
end


function to(Pos)
 local Noclip = Instance.new("BodyVelocity")

Noclip.Name = "BodyClip"

Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
Noclip.MaxForce = Vector3.new(100000,100000,100000)
Noclip.Velocity = Vector3.new(0,0,0)
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
local r = game:GetService("Players").LocalPlayer
local lpc = r.Character.HumanoidRootPart.CFrame
   game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(lpc.X, Pos.Y, lpc.Z)
   Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

   if game.Players.LocalPlayer.Character.Humanoid.Sit == true then game.Players.LocalPlayer.Character.Humanoid.Sit = false end

   pcall(function() tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(Distance/350, Enum.EasingStyle.Linear),{CFrame = Pos}) end)
   tween:Play()
   if Distance <= 250 then
      tween:Cancel()
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
   end
   if _G.StopTween == true then
      tween:Cancel()
      _G.Clip = false
   end 
end 
 function db:new(id)
  id = id or #getgenv().deb + 1
  getgenv().deb[id] = true
 end 
 function db:get(id)
  return getgenv().deb[id]
 end 
 function db:start(id)
  if not pcall(function()
   if getgenv().deb[id] ~= nil then
    getgenv().deb[id] = true
   end 
  end) then
  return false 
  else 
   return true
  end
 end 
 function db:stop(id)
  return pcall(function ()
   getgenv().deb[id] = false
  end)
 end 
 function db:delete(id)
  getgenv().de[id] = nil 
 end 
function getc(p)
 
 return pcall(function() return p.Character:WaitForChild('Head').CFrame end) 
 end
function down(use) -- Send key to client

    game:GetService("VirtualInputManager"):SendKeyEvent(true,use,false,game.Players.LocalPlayer.Character.HumanoidRootPart)

    wait(.1)
    game:GetService("VirtualInputManager"):SendKeyEvent(false,use,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
end 
function geth(t)
 return tonumber(t.Character.Humanoid.Health)
end 
function equip(tooltip)
   local player = game.Players.LocalPlayer
   local character = player.Character or player.CharacterAdded:Wait()

   for _, item in pairs(player.Backpack:GetChildren()) do
      if item:IsA("Tool") and item.ToolTip == tooltip then
         local humanoid = character:FindFirstChildOfClass("Humanoid")
         if humanoid and not humanoid:IsDescendantOf(item) then
            humanoid:UnequipTools()
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(item)
            return true
         end
      end
   end
   
   return false
end 
function rands()
 local shit = math.random(1,4)
 if shit == 1 then return 'Z' end
 if shit == 2 then return 'X' end
 if shit == 3 then return 'C' end
 if shit == 4 then return 'V' end 
end 
function buso() 
    if(not(game.Players.LocalPlayer.Character:FindFirstChild('HasBuso')))then
local rel = game.ReplicatedStorage

        rel.Remotes.CommF_:InvokeServer('Buso')
    end
end 
function Hop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site
        if foundAnything == "" then
            Site =
                game.HttpService:JSONDecode(
                game:HttpGet(
                    "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
                )
            )
        else
            Site =
                game.HttpService:JSONDecode(
                game:HttpGet(
                    "https://games.roblox.com/v1/games/" ..
                        PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
                )
            )
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0
        for i, v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _, Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile =
                                pcall(
                                function()
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end
                            )
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(
                        function()
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(
                                PlaceID,
                                ID,
                                game.Players.LocalPlayer
                            )
                        end
                    )
                    wait(4)
                end
            end
        end
    end
    function Teleport()
        while wait() do
            pcall(
                function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end
            )
        end
    end
    Teleport()
end
------------------main
if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") then

        repeat wait()

            if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
                if getgenv().c['Team'] == nil or getgenv().c['Team'] == "Pirates" then
                    for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                        v.Function()
                    end
                elseif getgenv().c['Team'] == "Marines" then
                    for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                        v.Function()
                    end
                else
                    for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                        v.Function()
                    end
                end
            end
        until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
    end
nextp = true 
print('ur mom is loaded')
 spawn(function ()
 hb: Connect (function()
    task.wait(1)
    
    if nextp and not debou then 
     print('tfetch')
     debou = true
     if getgenv().targ then
      table.insert(scannedPlayers, getgenv().targ) 
      print ('save target to list')
     end 
    
     fetch()
     if getgenv().targ == nil or getgenv().targ == false then Hop() end
     debou, nextp = false, false
     end
 end)
end)

hb: Connect (function ()
 print('a')
 if nextp then
  if getgenv().targ and lp:DistanceFromCharacter(getc(getgenv().targ).Position) < 50 then 
   print('reached')
   if geth(getgenv().targ) > 4000 then
    print('health > 4k')
    fastspam = true
   game.VirtualUser:CaptureController()
   game.VirtualUser:ClickButton1()
   p = CFrame.new(0,0,0)
   elseif not safe then 
    
   p = CFrame.new(0,20,0)
   fastspam = false
   end
   if geth(lp) < getgenv().c.SafeHealth then 
    print('hide')
    repeat wait() safe = true t = CFrame.new(0,500,0)
    until geth(lp) > getgenv().c.SafeUntil
    safe = false
    end
   if getgenv().c.Buso then buso() print('buso') end 
   if getgenv().c.AlwaysDash then down("Q") end 
   if getgenv().c.Ken then down('0x65') end 
   if getgenv().c["V3"] then down('T') end
   if getgenv().c["V4"] then down('Y') end 
   if game:GetService("Players").LocalPlayer.PlayerGui.Main.SafeZone.Visible == true then print('next: safe') nextp = true end
   pcall(function() if string.find(string.lower(game:GetService("Players").LocalPlayer.PlayerGui.Notifications.NotificationTemplate.Text), "player") then nextp = true game:GetService("Players").LocalPlayer.PlayerGui.Notifications.NotificationTemplate.Text = "detected" end end)
   if game:GetService("Players").LocalPlayer.PlayerGui.Main.PvpDisabled.Visible == true then game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EnablePvp") end
   equip("Melee")
   if fastspam then num = 3 else num = 6 end 
   if math.random(1, num) == 2 then
    keydown(rands())
   end
   else 
    print("waiting for tween")
  end
  else 
   print("waiting for target")
 end
end)
  
hb:Connect(function()
 spawn(function ()
  print(debou)
  if debou then 
   print(getgenv().targ.Name)
   to(getgenv().targ.Character.HumanoidRootPart.CFrame + p.Position)
  end 
 end)
 end)
